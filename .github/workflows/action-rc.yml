name: Release â€” Deploy Backend

on:
  push:
    branches:
      - develop
      - release/*
      - feature/*

env:
  BRANCH: ${{ github.ref_name }}
  ENVIRONMENT: development
  BACKEND_HOST: ${{ vars.BACKEND_HOST || 'backend' }}
  BACKEND_EXT_PORT: ${{ vars.BACKEND_EXT_PORT || 8000 }}
  BACKEND_INT_PORT: ${{ vars.BACKEND_INT_PORT || 80 }}
  DEBUG: ${{ vars.DEBUG || 'True' }}
  LOG_LEVEL: ${{ vars.LOG_LEVEL || 'DEBUG' }}
  API_V1_STR: ${{ vars.API_V1_STR || '/api/v1' }}
  POSTGRES_HOST: ${{ vars.POSTGRES_HOST || 'postgres' }}
  POSTGRES_PORT: ${{ vars.POSTGRES_PORT || 5432 }}
  POSTGRES_DB: ${{ vars.POSTGRES_DB || 'app' }}
  POSTGRES_DB_RECORDED: ${{ vars.POSTGRES_DB || 'recorded' }}
  POSTGRES_USER: ${{ vars.POSTGRES_USER || 'admin' }}
  POSTGRES_PASSWORD: ${{ vars.POSTGRES_PASSWORD || 'Changeme!1' }}
  GHCR_LOCATION: ${{ vars.GHCR_LOCATION || github.repository }}
  SECRET_KEY: ${{ secrets.SECRET_KEY || 'dummysecret' }}
  ACCESS_TOKEN_EXPIRE_MINUTES: ${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES || 30 }}
  ALGORITHM: ${{ secrets.ALGORITHM || 'HS256' }}

jobs:
  test:
    runs-on: ubuntu-latest
    environment: release
    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ env.BRANCH }}

      - name: Write .env from GitHub variables
        run: |
          rm -f .env
          for var in BRANCH ENVIRONMENT BACKEND_HOST BACKEND_EXT_PORT BACKEND_INT_PORT \
            DEBUG LOG_LEVEL API_V1_STR POSTGRES_HOST POSTGRES_PORT POSTGRES_DB \
            POSTGRES_DB_RECORDED POSTGRES_USER POSTGRES_PASSWORD GHCR_LOCATION \
            SECRET_KEY ACCESS_TOKEN_EXPIRE_MINUTES ALGORITHM; do
              echo "$var=${!var}" >> .env
          done

      - name: Build dev image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          target: development
          push: false
          tags: backend:dev

      - name: Run tests with pytest
        run: make buildd

      - name: Run tests with pytest
        run: make test

  build:
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Write .env from GitHub variables
        run: |
          rm -f .env
          for var in BRANCH ENVIRONMENT BACKEND_HOST BACKEND_EXT_PORT BACKEND_INT_PORT \
            DEBUG LOG_LEVEL API_V1_STR POSTGRES_HOST POSTGRES_PORT POSTGRES_DB \
            POSTGRES_DB_RECORDED POSTGRES_USER POSTGRES_PASSWORD GHCR_LOCATION \
            SECRET_KEY ACCESS_TOKEN_EXPIRE_MINUTES ALGORITHM; do
              echo "$var=${!var}" >> .env
          done

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build & Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          target: production
          push: true
          tags: ghcr.io/${{ env.GHCR_LOCATION }}/${{ env.BACKEND_HOST }}:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Move new cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Write .env from GitHub variables
        run: |
          rm -f .env
          for var in BRANCH ENVIRONMENT BACKEND_HOST BACKEND_EXT_PORT BACKEND_INT_PORT \
            DEBUG LOG_LEVEL API_V1_STR POSTGRES_HOST POSTGRES_PORT POSTGRES_DB \
            POSTGRES_DB_RECORDED POSTGRES_USER POSTGRES_PASSWORD GHCR_LOCATION \
            SECRET_KEY ACCESS_TOKEN_EXPIRE_MINUTES ALGORITHM; do
              echo "$var=${!var}" >> .env
          done

      - name: Deploy container from GHCR
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ vars.SSH_HOST }}
          port: ${{ vars.SSH_PORT }}
          username: ${{ vars.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker pull ghcr.io/${{ env.GHCR_LOCATION }}/${{ env.BACKEND_HOST }}:latest
            docker stop ${{ env.BACKEND_HOST }} || true
            docker rm ${{ env.BACKEND_HOST }} || true
            docker run -d \
              --name ${{ env.BACKEND_HOST }} \
              --restart always \
              -p ${{ env.BACKEND_EXT_PORT }}:${{ env.BACKEND_INT_PORT }} \
              --env-file .env \
              ghcr.io/${{ env.GHCR_LOCATION }}/${{ env.BACKEND_HOST }}:latest
